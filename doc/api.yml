openapi: 3.0.0
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/KableAPI/Kable/2.0.1
  - description: Kable Development
    url: https://development.kableapi.com/
  - description: Kable Production
    url: https://production.kableapi.com/

info:
  description: Kable allows developers to manage API keys and authentications for their API products. While we recommend using the dashboard for key management and using one of our performance-optimized SDKs for authentication, these APIs are always available as well.
  version: 2.0.1
  title: Kable API
  contact:
    email: contact@kableapi.com
tags:
  - name: keys
    description: The key management API allows developers to create and revoke client API keys. These functions are fully self-serviceable through the Kable dashboard, but are also made available through the public API.
  - name: authentications
    description: The authentication API allows developers to authenticate client requests. For performance reasons, is **NOT** recommended to use this API directly -- instead, please use one of our SDKs which use caching to eliminate latency.
paths:
  /keys/create:
    post:
      tags:
        - keys
      summary: create a key
      operationId: createKey
      description: Generate a new API key for a client in a given environment
      requestBody:
        description: Client and environment for which to create key
        content:
          application/json:
            schema:
              type: object
              required:
                - client_id
                - environment
              properties:
                client_id:
                  type: string
                  example: xyz_3c90e9ac92c64f31ae8ed84d21e18740
                environment:
                  type: string
                  example: PRODUCTION
      responses:
        "201":
          description: "new key successfully created"
          content:
            application/json:
              schema:
                type: object
                required:
                  - key
                properties:
                  key:
                    type: string
                    example: sk_prod_4d11fa314e0f4e9fbfd974e1761912f7
        "400":
          description: "invalid input, object invalid"

  /keys/revoke:
    post:
      tags:
        - keys
      summary: revoke a key(s)
      operationId: revokeKey
      description: Revoke an API key (or keys) from a client in a given environment
      requestBody:
        description: Client and environment for which to revoke key(s). By default, all keys fora given client and environment are revoked; to revoke an individual key, include the optional `key` parameter. By default, revoked keys are useable for 10 minutes following revocation (to give developers time to update configurations); to revoke a key immediately, use the optional `immediately` parameter.
        content:
          application/json:
            schema:
              type: object
              required:
                - client_id
                - environment
              properties:
                client_id:
                  type: string
                  example: xyz_3c90e9ac92c64f31ae8ed84d21e18740
                environment:
                  type: string
                  example: PRODUCTION
                key:
                  type: string
                  example: sk_prod_4d11fa314e0f4e9fbfd974e1761912f7
                immediately:
                  type: boolean
                  example: false
      responses:
        "200":
          description: "key(s) successfully revoked"
        "400":
          description: "invalid input, object invalid"

  /authentications/verify:
    post:
      tags:
        - authentications
      summary: authenticate a request
      operationId: verifyAuthentication
      description: Verify a client request to your API
      requestBody:
        description: Client, environment, and key to verify
        content:
          application/json:
            schema:
              type: object
              required:
                - client_id
                - environment
                - key
              properties:
                client_id:
                  type: string
                  example: xyz_3c90e9ac92c64f31ae8ed84d21e18740
                environment:
                  type: string
                  example: PRODUCTION
                key:
                  type: string
                  example: sk_prod_4d11fa314e0f4e9fbfd974e1761912f7
      responses:
        "200":
          description: "authentication verified"
        "400":
          description: "invalid input, object invalid"
        "401":
          description: "unauthorized"
